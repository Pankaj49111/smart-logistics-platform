version: '3.9'

services:

  # --------------------------------------------------------------------
  # üóÑÔ∏è PostgreSQL Database
  # --------------------------------------------------------------------
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: logistics_user
      POSTGRES_PASSWORD: logistics_pass
      POSTGRES_DB: logistics_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # --------------------------------------------------------------------
  # üçÉ MongoDB for analytics/audit
  # --------------------------------------------------------------------
  mongo:
    image: mongo:7
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  # --------------------------------------------------------------------
  # ‚ö° Kafka + Zookeeper
  # --------------------------------------------------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # --------------------------------------------------------------------
  # üîé Zipkin for distributed tracing
  # --------------------------------------------------------------------
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  # --------------------------------------------------------------------
  # üìà Prometheus for metrics
  # --------------------------------------------------------------------
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # --------------------------------------------------------------------
  # ‚öôÔ∏è Config Server
  # --------------------------------------------------------------------
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres

  # --------------------------------------------------------------------
  # üîç Discovery Server (Eureka)
  # --------------------------------------------------------------------
  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - config-server

  # --------------------------------------------------------------------
  # üåê API Gateway
  # --------------------------------------------------------------------
  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - discovery-server
      - auth-service

  # --------------------------------------------------------------------
  # üîê Auth Service
  # --------------------------------------------------------------------
  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres
      - kafka

  # --------------------------------------------------------------------
  # üöö Shipment Service
  # --------------------------------------------------------------------
  shipment-service:
    build: ./shipment-service
    container_name: shipment-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - postgres

  # --------------------------------------------------------------------
  # üöõ Fleet Service
  # --------------------------------------------------------------------
  fleet-service:
    build: ./fleet-service
    container_name: fleet-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - postgres

  # --------------------------------------------------------------------
  # üß† AI Assistant Service
  # --------------------------------------------------------------------
  ai-assistant-service:
    build: ./ai-assistant-service
    container_name: ai-assistant-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - zipkin

  # --------------------------------------------------------------------
  # üîî Notification Service
  # --------------------------------------------------------------------
  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka

  # --------------------------------------------------------------------
  # üìä Analytics Service
  # --------------------------------------------------------------------
  analytics-service:
    build: ./analytics-service
    container_name: analytics-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongo
      - kafka

  # --------------------------------------------------------------------
  # üìã Audit Service
  # --------------------------------------------------------------------
  audit-service:
    build: ./audit-service
    container_name: audit-service
    ports:
      - "8087:8087"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongo
      - kafka

volumes:
  pgdata:
  mongodata:
